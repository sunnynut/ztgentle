2015-04-01
2015-03-01

CREATE TABLE IF NOT EXISTS "report"."dwr_team_revenue_detail_201503" (
		"account_month" varchar(10),
		"account_date" varchar(10),
		"team_id" int8,
		"team_name" varchar(200),
		"team_price" numeric(18,2),
		"team_cost_price" numeric(18,2),
		"sale_channel" varchar(50),
		"team_dispatching_type" varchar(50),
		"is_other_tuan_flag" varchar(10),
		"order_source" varchar(20),
		"order_type" varchar(20),
		"hotel_seq" varchar(200),
		"hotel_name" varchar(500),
		"sign_company" varchar(50),
		"belong_dept_code" varchar(20),
		"coupon_no" varchar(50),
		"buy_qty" int8,
		"refund_qty" int8,
		"consume_qty" int8,
		"restore_qty" int8,
		"red_envelope_amt" numeric(18,2),
		"card_amt" numeric(18,2),
		"discount_amt" numeric(18,2),
		"pay_amt" numeric(18,2),
		"refund_amt" numeric(18,2),
		"profit" numeric(18,2),
		"revenue" numeric(18,2),
		"channel_service_charge" numeric(18,2),
		"activity_type" varchar(50),
		"rebate_money" numeric(18,2)
		)
		WITH (OIDS=FALSE)
	;
delete from report.dwr_team_revenue_detail_201503;
commit;


INSERT INTO report.dwr_team_revenue_detail_201503
SELECT
	t1.account_month,
	t1.account_date,
	t1.team_id AS 团品ID,
	regexp_replace(regexp_replace(t4.stitle, ',', '，','g'),'	','','g') AS 团品名称,
	t1.origin_price AS 团品价格,
	COALESCE(t1.cost_price, 0) AS 团品底价,
	t1.sale_platform AS 售卖频道,
	t4.delivery AS 团品配送类型,
	CASE
	WHEN t4.new_type = 'other' THEN '外团'
	ELSE '本团' END AS 是否外团,
	CASE
	WHEN t4.group_id IN (18, 19) THEN
		(
			CASE
			WHEN	t4.new_attr = 'tickets' THEN	'门票'
			WHEN	t4.new_type = 'holiday_tts' AND (t4.new_attr <> 'tickets' OR new_attr IS NULL)	THEN	'tts'
			ELSE	'其他旅游商品'	END
		)
	WHEN t4.group_id IN (2, 4) THEN
		(
			CASE
			WHEN t4.partner_source = '0' THEN	'直销'
			WHEN t4.partner_source = '1' THEN	
			(
				CASE
				WHEN t4.other_tuan_type IS NULL OR t4.other_tuan_type = '' THEN 'OTA'
				ELSE t4.other_tuan_type END
			)	END
		)
	WHEN	t4.group_id = 0 THEN	'未分类'	END AS 订单来源,
	CASE
	WHEN	t4.group_id IN (2, 4) THEN	'酒店'
	WHEN	t4.group_id IN (18, 19) THEN	'旅游'
	ELSE	'未分类'	END AS 订单类别,
	COALESCE(t2.seq, '-') AS 酒店seq,
	COALESCE(t2.hotel_name, t2.title, '-') AS 酒店名称,
	CASE
	WHEN (t4.sign_company = '0' or t4.sign_company is null) THEN	'北京趣拿信息技术有限公司'
	WHEN t4.sign_company = '1' THEN	'北京趣拿软件科技有限公司'	END AS 签约公司,
	COALESCE(t2.dept, '-') AS 所属部门,
	t1.coupon_id AS 券号,
	1 AS 购买数量,
	0 AS 退款数量,
	t1.coupon_consume_count AS 消费数量,
	t1.coupon_restore_count AS 恢复数量,
	CASE
	WHEN t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN COALESCE(t3.red_envelope_price * t1.index_flag, 0)
	WHEN t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN -COALESCE(t3.red_envelope_price * t1.index_flag, 0) END AS 红包金额,
	CASE
	WHEN t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN COALESCE(t3.cash_coupon_price * t1.index_flag, 0) 
	WHEN t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN -COALESCE(t3.cash_coupon_price * t1.index_flag, 0) END AS 代金券金额,
	CASE
	WHEN t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN t1.origin_price - t1.sale_price + COALESCE(t3.discount_amount,0) 
	WHEN t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN -(t1.origin_price - t1.sale_price + COALESCE(t3.discount_amount,0)) END AS 优惠金额,
	CASE
	WHEN t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN 
	t1.sale_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0) - COALESCE(t3.discount_amount,0)
	WHEN t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN 
	-(t1.sale_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0) - COALESCE(t3.discount_amount,0)) END AS 支付金额,
	0 AS 退款金额,
	CASE
	WHEN t4.new_type = 'other' AND t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN t1.origin_price * 0.05
	WHEN t4.new_type = 'other' AND t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN -t1.origin_price * 0.05
	ELSE
	(
		CASE
		WHEN t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN CAST((t1.origin_price - t1.cost_price) AS DECIMAL(18,2))
		WHEN t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN -CAST((t1.origin_price - t1.cost_price) AS DECIMAL(18,2)) END 
	) END AS 本期佣金,
	CASE
	WHEN t4.new_type = 'other' AND t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN
	t1.origin_price * 0.05 - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)
	WHEN t4.new_type = 'other' AND t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN
	-(t1.origin_price * 0.05 - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0))
	ELSE
	(
		CASE
		WHEN t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN
		CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2))
		WHEN t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN
		- CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2)) END	
	) END AS 本期收入,
	CASE
	WHEN t1.sale_platform in ('bainuo') THEN 
	(
		CASE
		WHEN t1.coupon_consume_count = 1 AND t1.coupon_restore_count = 0 THEN
		CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2)) / 2
		WHEN t1.coupon_consume_count = 0 AND t1.coupon_restore_count = 1 THEN
		- CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2)) /2
		END
	) 
	ELSE 0 END AS 渠道服务费,
	t1.activity_type AS 活动类型,
	t1.rebate_money AS 返现金额
FROM
(
	SELECT
		to_char(cct.operate_time, 'YYYY-MM') as account_month,
		cct.operate_time::DATE as account_date,
		cct.team_id,
		cct.coupon_id,
		COALESCE(o.cost_price, 0) AS cost_price,
		o.price AS sale_price,
		c.shop_id,
		CASE
		WHEN oe.oid IS NULL THEN
			o.price
		ELSE
			oe.team_price
		END
		AS origin_price,
		CASE
		WHEN o.user_id = '-101012' THEN 'bainuo'
		WHEN o.user_id = '-101010' THEN 'dianping'
		WHEN o.user_id = '-100' THEN 'zhunaer'
		WHEN o.user_id = '-101' THEN 'lashou'
		ELSE
		(
			CASE
			WHEN o.service = 'sms_client' THEN	'Q-app'
			WHEN o.service = 'chinabank' 	THEN	'Q-touch'
			ELSE	'Q-www'	END	
		) 
		END AS sale_platform,
		cct.operate_type AS operate_type,
		CASE
		WHEN cct.operate_type = 'consume' THEN	1
		ELSE	0	END	AS coupon_consume_count,
		CASE
		WHEN cct.operate_type = 'restore' THEN	1
		ELSE	0	END	AS coupon_restore_count,
		CASE
		WHEN o.pay_time < EXTRACT(epoch FROM '2015-01-01'::timestamptz) :: BIGINT THEN 0
		ELSE 1 END AS index_flag,
		CASE
		WHEN oe.activity_type IN (2, 3) THEN '五折'
		WHEN oe.activity_type = 4 THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返现+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返现'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返币+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type not in (1, 2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '新用户立减'
		WHEN oe.activity_type = 16 AND oe.rebate_type = 1 THEN '拉新'
		WHEN oe.activity_type = 16 AND oe.rebate_type in (2, 3) THEN '返币'
		WHEN oe.activity_type = 32 AND oe.rebate_type = 1 THEN '超超返'
		WHEN oe.activity_type = 32 AND oe.rebate_type in (2, 3) THEN '返币'
		WHEN oe.activity_type = 260 AND oe.rebate_type = 0 THEN '同城立减+返币'
		WHEN oe.activity_type = 256 AND oe.rebate_type = 0 THEN '同城立减'
		ELSE '原价'
		END AS activity_type,
		COALESCE(rb.money, 0) AS rebate_money
	FROM
		coupon_consume_trace cct
	JOIN 
		PUBLIC . ORDER AS o 
	ON 
		cct.order_id = o. ID
	JOIN
		coupon c
	ON
		cct.coupon_id = c.id
	LEFT JOIN
		public.order_ext as oe
	ON
		cct.order_id = oe.oid
--	LEFT JOIN
--		(select oid,activity_type from order_activity where activity_type in (2, 3, 4, 12)) oa
--	ON
--		cct.order_id = oa.oid
	LEFT JOIN
	(
		SELECT
			id, coupon_id, order_id, money
		FROM
		(
		SELECT
			id, coupon_id, order_id, "row_number"() OVER (PARTITION BY order_id ORDER BY operate_time) AS rn
		FROM
			"public".coupon_consume_trace
		WHERE
			operate_type = 'consume'
		) q
		JOIN
			(SELECT oid, money FROM "public".return_balance WHERE state = 1) rb
		ON
			q.order_id = rb.oid
		WHERE
			rn = 1
	) rb
	ON
		cct.id = rb.id AND cct.coupon_id = rb.coupon_id
	WHERE
		cct.operate_time >= '2015-03-01' :: timestamptz
	AND 
		cct.operate_time < '2015-04-01' :: timestamptz
	AND
		cct.operate_type IN ('consume','restore')
	ORDER BY
		team_id
) t1
LEFT JOIN
(
	SELECT
		a.id,a.title,a.seq,b.dept,b.hotel_name
	FROM
		(SELECT id, title, seq FROM partner_shop) a
	LEFT JOIN
		(SELECT 
			DISTINCT cch.hotel_seq as seq ,cc.department as dept,ch.name as hotel_name
		FROM 
			report.crm_customer cc
		JOIN 
			report.crm_customer_hotel cch 
		ON
			cch.customer_serial_number = cc.serial_number
		JOIN 
			report.crm_hotel as ch 
		ON
			ch.seq_number=cch.hotel_seq
		WHERE 
			cc.valid=1
		ORDER BY
			cch.hotel_seq) b
	ON 
		a.seq = b.seq
) t2
ON
	t1.shop_id = t2."id"
LEFT JOIN
(
	SELECT
		DISTINCT 
		ticket_id,
		CASE
		WHEN operation_type = 1 THEN 'consume'
		ELSE 'restore' END AS operate_type,
		red_envelope_price,
		cash_coupon_price,
		discount_amount
	FROM
		"public".settlement_hsc_log
) t3
ON
	t1.coupon_id = t3.ticket_id::VARCHAR
AND
	t1.operate_type = t3.operate_type
JOIN
(
	SELECT
		id,
		stitle,
		delivery,
		partner_source,
		group_id,
		new_type,
		new_attr,
		sign_company,
		other_tuan_type
	FROM
		team
) t4
ON
	t1.team_id = t4."id"


INSERT INTO report.dwr_team_revenue_detail_201503
SELECT
	t1.account_month,
	t1.account_date,
	t1.team_id AS 团品ID,
	regexp_replace(regexp_replace(t4.stitle, ',', '，','g'),'	','','g') AS 团品名称,
	t1.origin_price AS 团品价格,
	COALESCE(t1.cost_price, 0) AS 团品底价,
	t1.sale_platform AS 售卖频道,
	t4.delivery AS 团品配送类型,
	CASE
	WHEN t4.new_type = 'other' THEN '外团'
	ELSE '本团' END AS 是否外团,
	CASE
	WHEN t4.group_id IN (18, 19) THEN
		(
			CASE
			WHEN	t4.new_attr = 'tickets' THEN	'门票'
			WHEN	t4.new_type = 'holiday_tts' AND (t4.new_attr <> 'tickets' OR new_attr IS NULL)	THEN	'tts'
			ELSE	'其他旅游商品'	END
		)
	WHEN t4.group_id IN (2, 4) THEN
		(
			CASE
			WHEN t4.partner_source = '0' THEN	'直销'
			WHEN t4.partner_source = '1' THEN
			(
				CASE
				WHEN t4.other_tuan_type IS NULL OR t4.other_tuan_type = '' THEN 'OTA'
				ELSE t4.other_tuan_type END
			)	END
		)
	WHEN	t4.group_id = 0 THEN	'未分类'	END AS 订单来源,
	CASE
	WHEN	t4.group_id IN (2, 4) THEN	'酒店'
	WHEN	t4.group_id IN (18, 19) THEN	'旅游'
	ELSE	'未分类'	END AS 订单类别,
	COALESCE(t2.seq, '-') AS 酒店seq,
	COALESCE(t2.hotel_name, t2.title, '-') AS 酒店名称,
	CASE
	WHEN (t4.sign_company = '0' or t4.sign_company is null) THEN	'北京趣拿信息技术有限公司'
	WHEN t4.sign_company = '1' THEN	'北京趣拿软件科技有限公司'	END AS 签约公司,
	COALESCE(t2.dept, '-') AS 所属部门,
	t1.through_coupon_id AS 券号,
	1 AS 购买数量,
	0 AS 退款数量,
	t1.through_coupon_consume_count AS 消费数量,
	t1.through_coupon_restore_count AS 恢复数量,
	CASE
	WHEN t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN COALESCE(t3.red_envelope_price * t1.index_flag, 0)
	WHEN t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN -COALESCE(t3.red_envelope_price * t1.index_flag, 0) END AS 红包金额,
	CASE
	WHEN t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN COALESCE(t3.cash_coupon_price * t1.index_flag, 0) 
	WHEN t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN -COALESCE(t3.cash_coupon_price * t1.index_flag, 0) END AS 代金券金额,
	CASE
	WHEN t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN t1.origin_price - t1.sale_price + COALESCE(t3.discount_amount,0) 
	WHEN t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN -(t1.origin_price - t1.sale_price + COALESCE(t3.discount_amount,0)) END AS 优惠金额,
	CASE
	WHEN t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN 
	t1.sale_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0) - COALESCE(t3.discount_amount,0)
	WHEN t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN 
	-(t1.sale_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0) - COALESCE(t3.discount_amount,0)) END AS 支付金额,
	0 AS 退款金额,
	CASE
	WHEN t4.new_type = 'other' AND t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN t1.origin_price * 0.05
	WHEN t4.new_type = 'other' AND t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN -t1.origin_price * 0.05
	ELSE
	(
		CASE
		WHEN t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN CAST((t1.origin_price - t1.cost_price) AS DECIMAL(18,2))
		WHEN t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN -CAST((t1.origin_price - t1.cost_price) AS DECIMAL(18,2)) END 
	) END AS 本期佣金,
	CASE
	WHEN t4.new_type = 'other' AND t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN
	t1.origin_price * 0.05 - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)
	WHEN t4.new_type = 'other' AND t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN
	-(t1.origin_price * 0.05 - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0))
	ELSE
	(
		CASE
		WHEN t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN
		CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2))
		WHEN t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN
		- CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2)) END	
	) END AS 本期收入,
	CASE
	WHEN t1.sale_platform in ('bainuo') THEN 
	(
		CASE
		WHEN t1.through_coupon_consume_count = 1 AND t1.through_coupon_restore_count = 0 THEN
		CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2)) / 2
		WHEN t1.through_coupon_consume_count = 0 AND t1.through_coupon_restore_count = 1 THEN 
		- CAST((t1.origin_price - t1.cost_price - COALESCE(t3.red_envelope_price * t1.index_flag, 0) - COALESCE(t3.cash_coupon_price * t1.index_flag, 0)) AS DECIMAL(18,2)) / 2
		END
	) 
	ELSE 0 END AS 渠道服务费,
	t1.activity_type AS 活动类型,
	t1.rebate_money AS 返现金额
FROM
(
	SELECT
		to_char(tcct.operate_time, 'YYYY-MM') as account_month,
		tcct.operate_time::DATE as account_date,
		tcct.team_id,
		tcct.through_coupon_id,
		COALESCE(o.cost_price, 0) AS cost_price,
		o.price AS sale_price,
		tcct.shop_id,
		CASE
		WHEN oe.oid IS NULL THEN
			o.price
		ELSE
			oe.team_price
		END
		AS origin_price,
		CASE
		WHEN o.user_id = '-101012' THEN 'bainuo'
		WHEN o.user_id = '-101010' THEN 'dianping'
		WHEN o.user_id = '-100' THEN 'zhunaer'
		WHEN o.user_id = '-101' THEN 'lashou'
		ELSE
		(
			CASE
			WHEN o.service = 'sms_client' THEN	'Q-app'
			WHEN o.service = 'chinabank' 	THEN	'Q-touch'
			ELSE	'Q-www'	END	
		) 
		END AS sale_platform,
		tcct.operate_type AS operate_type,
		CASE
		WHEN tcct.operate_type = 'consume' THEN	1
		ELSE	0	END	AS through_coupon_consume_count,
		CASE
		WHEN tcct.operate_type = 'restore' THEN	1
		ELSE	0	END	AS through_coupon_restore_count,
		CASE
		WHEN o.pay_time < EXTRACT(epoch FROM '2015-01-01'::timestamptz) :: BIGINT THEN 0
		ELSE 1 END AS index_flag,
		CASE
		WHEN oe.activity_type IN (2, 3) THEN '五折'
		WHEN oe.activity_type = 4 THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返现+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返现'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返币+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type not in (1, 2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '新用户立减'
		WHEN oe.activity_type = 16 AND oe.rebate_type = 1 THEN '拉新'
		WHEN oe.activity_type = 16 AND oe.rebate_type in (2, 3) THEN '返币'
		WHEN oe.activity_type = 32 AND oe.rebate_type = 1 THEN '超超返'
		WHEN oe.activity_type = 32 AND oe.rebate_type in (2, 3) THEN '返币'
        WHEN oe.activity_type = 260 AND oe.rebate_type = 0 THEN '同城立减+返币'
		WHEN oe.activity_type = 256 AND oe.rebate_type = 0 THEN '同城立减'
		ELSE '原价'
		END AS activity_type,
		COALESCE(rb.money, 0) AS rebate_money
	FROM
		through_coupon_consume_trace tcct
	JOIN 
		PUBLIC . ORDER AS o 
	ON 
		tcct.order_id = o. ID
	LEFT JOIN
		public.order_ext as oe
	ON
		tcct.order_id = oe.oid
--	LEFT JOIN
--		(select oid,activity_type from order_activity where activity_type in (2, 3, 4, 12)) oa
--	ON
--		tcct.order_id = oa.oid
	LEFT JOIN
	(
		SELECT
			id, through_coupon_id, order_id, money
		FROM
		(
		SELECT
			id, through_coupon_id, order_id, "row_number"() OVER (PARTITION BY order_id ORDER BY operate_time) AS rn
		FROM
			"public".through_coupon_consume_trace
		WHERE
			operate_type = 'consume'
		) q
		JOIN
			(SELECT oid, money FROM "public".return_balance WHERE state = 1) rb
		ON
			q.order_id = rb.oid
		WHERE
			rn = 1
	) rb
	ON
		tcct.id = rb.id AND tcct.through_coupon_id = rb.through_coupon_id
	WHERE
		tcct.operate_time >= '2015-03-01' :: timestamptz
	AND 
		tcct.operate_time < '2015-04-01' :: timestamptz
	AND
		tcct.operate_type IN ('consume','restore')
	ORDER BY
		team_id
) t1
LEFT JOIN
(
	SELECT
		a.id,a.title,a.seq,b.dept,b.hotel_name
	FROM
		(SELECT id, title, seq FROM partner_shop) a
	LEFT JOIN
		(SELECT 
			DISTINCT cch.hotel_seq as seq ,cc.department as dept,ch.name as hotel_name
		FROM 
			report.crm_customer cc
		JOIN 
			report.crm_customer_hotel cch 
		ON
			cch.customer_serial_number = cc.serial_number
		JOIN 
			report.crm_hotel as ch 
		ON
			ch.seq_number=cch.hotel_seq
		WHERE 
			cc.valid=1
		ORDER BY
			cch.hotel_seq) b
	ON 
		a.seq = b.seq
) t2
ON
	t1.shop_id = t2."id"
LEFT JOIN
(
	SELECT
		DISTINCT ticket_id,
		CASE
		WHEN operation_type = 1 THEN 'consume'
		ELSE 'restore' END AS operate_type,
		red_envelope_price,
		cash_coupon_price,
		discount_amount
	FROM
		"public".settlement_hsc_log
) t3
ON
	t1.through_coupon_id = t3.ticket_id
AND
	t1.operate_type = t3.operate_type
JOIN
(
	SELECT
		id,
		stitle,
		delivery,
		partner_source,
		group_id,
		new_type,
		new_attr,
		sign_company,
		other_tuan_type
	FROM
		team
) t4
ON
	t1.team_id = t4."id"
;


INSERT INTO report.dwr_team_revenue_detail_201503
SELECT
	t1.account_month,
	t1.account_date,
	t1.team_id AS 团品ID,
	regexp_replace(regexp_replace(t4.stitle, ',', '，','g'),'	','','g') AS 团品名称,
	t1.origin_price AS 团品价格,
	COALESCE(t1.cost_price, 0) AS 团品底价,
	t1.sale_platform AS 售卖频道,
	t4.delivery AS 团品配送类型,
	CASE
	WHEN t4.new_type = 'other' THEN '外团'
	ELSE '本团' END AS 是否外团,
	CASE
	WHEN t4.group_id IN (18, 19) THEN
		(
			CASE
			WHEN	t4.new_attr = 'tickets' THEN	'门票'
			WHEN	t4.new_type = 'holiday_tts' AND (t4.new_attr <> 'tickets' OR new_attr IS NULL)	THEN	'tts'
			ELSE	'其他旅游商品'	END
		)
	WHEN t4.group_id IN (2, 4) THEN
		(
			CASE
			WHEN t4.partner_source = '0' THEN	'直销'
			WHEN t4.partner_source = '1' THEN	
			(
				CASE
				WHEN t4.other_tuan_type IS NULL OR t4.other_tuan_type = '' THEN 'OTA'
				ELSE t4.other_tuan_type END
			)	END
		)
	WHEN	t4.group_id = 0 THEN	'未分类'	END AS 订单来源,
	CASE
	WHEN	t4.group_id IN (2, 4) THEN	'酒店'
	WHEN	t4.group_id IN (18, 19) THEN	'旅游'
	ELSE	'未分类'	END AS 订单类别,
	COALESCE(t2.seq, '-') AS 酒店seq,
	COALESCE(t2.hotel_name, '-') AS 酒店名称,
	CASE
	WHEN (t4.sign_company = '0' or t4.sign_company is null) THEN	'北京趣拿信息技术有限公司'
	WHEN t4.sign_company = '1' THEN	'北京趣拿软件科技有限公司'	END AS 签约公司,
	COALESCE(t2.dept, '-') AS 所属部门,
	t1.order_id AS 订单号,
	t1.quantity AS 购买数量,
	0 AS 退款数量,
	0 AS 消费数量,
	0 AS 恢复数量,
	COALESCE(t1.red_envelope, 0) AS 红包金额,
	COALESCE(t1.card, 0) AS 代金券金额,
	(t1.origin_price - t1.sale_price) * t1.quantity AS 优惠金额,
	t1.money AS 支付金额,
	0 AS 退款金额,
	CAST((t1.origin_price - t1.cost_price) * t1.quantity AS DECIMAL(18,2)) AS 本期佣金,
	CAST((t1.origin_price - t1.cost_price) * t1.quantity - COALESCE(t1.red_envelope, 0) - COALESCE(t1.card, 0) AS DECIMAL(18,2)) AS 本期收入,
	0 AS 渠道服务费,
	t1.activity_type AS 活动类型,
	0 AS 返现金额
FROM
(
	SELECT
		to_char(to_timestamp(o.pay_time), 'YYYY-MM') AS account_month,
		to_timestamp(o.pay_time)::DATE AS account_date,
		o.team_id AS team_id,
		o.id  AS order_id,
		COALESCE(o.cost_price, 0) AS cost_price,
		o.price AS sale_price,
		o.red_envelope,
		o.card,
		o.money,
		o.quantity,
		0 AS shop_id,
		CASE
		WHEN oe.oid IS NULL THEN
			o.price
		ELSE
			oe.team_price
		END
		AS origin_price,
		CASE
		WHEN o.user_id = '-101012' THEN 'bainuo'
		WHEN o.user_id = '-101010' THEN 'dianping'
		WHEN o.user_id = '-100' THEN 'zhunaer'
		WHEN o.user_id = '-101' THEN 'lashou'
		ELSE
		(
			CASE
			WHEN o.service = 'sms_client' THEN	'Q-app'
			WHEN o.service = 'chinabank' 	THEN	'Q-touch'
			ELSE	'Q-www'	END	
		) 
		END AS sale_platform,
		'consume'::TEXT AS operate_type,
		CASE
		WHEN oe.activity_type IN (2, 3) THEN '五折'
		WHEN oe.activity_type = 4 THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返现+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返现'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返币+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type not in (1, 2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '新用户立减'
		WHEN oe.activity_type = 16 AND oe.rebate_type = 1 THEN '拉新'
		WHEN oe.activity_type = 16 AND oe.rebate_type in (2, 3) THEN '返币'
		WHEN oe.activity_type = 32 AND oe.rebate_type = 1 THEN '超超返'
		WHEN oe.activity_type = 32 AND oe.rebate_type in (2, 3) THEN '返币'
		WHEN oe.activity_type = 260 AND oe.rebate_type = 0 THEN '同城立减+返币'
		WHEN oe.activity_type = 256 AND oe.rebate_type = 0 THEN '同城立减'
		ELSE '原价'
		END AS activity_type
	FROM
		PUBLIC . ORDER AS o
	JOIN
		(SELECT id from "public".team where delivery = 'voucher') t
	ON
		o.team_id = t.id
	LEFT JOIN
		public.order_ext as oe
	ON
		o.id = oe.oid
--	LEFT JOIN
--		(select oid,activity_type from order_activity where activity_type in (2, 3, 4, 12)) oa
--	ON
--		o.id = oa.oid
	WHERE
		state IN (
			'pay',
			'partial_refund',
			'refund',
			'refunding'
		)
	AND
		o.pay_time >= EXTRACT(epoch FROM '2015-03-01' :: timestamptz)::BIGINT
	AND
		o.pay_time < EXTRACT(epoch FROM	'2015-04-01' :: timestamptz)::BIGINT
	ORDER BY
		o.id
) t1
LEFT JOIN
(
	SELECT
		a.id,a.seq,b.dept,b.hotel_name
	FROM
		(SELECT id, seq FROM partner_shop) a
	JOIN
		(SELECT 
			DISTINCT cch.hotel_seq as seq ,cc.department as dept,ch.name as hotel_name
		FROM 
			report.crm_customer cc
		JOIN 
			report.crm_customer_hotel cch 
		ON
			cch.customer_serial_number = cc.serial_number
		JOIN 
			report.crm_hotel as ch 
		ON
			ch.seq_number=cch.hotel_seq
		WHERE 
			cc.valid=1
		ORDER BY
			cch.hotel_seq) b
	ON 
		a.seq = b.seq
) t2
ON
	t1.shop_id = t2."id"
JOIN
(
	SELECT
		id,
		stitle,
		delivery,
		partner_source,
		group_id,
		new_type,
		new_attr,
		sign_company,
		other_tuan_type
	FROM
		team
	WHERE
		delivery = 'voucher'
) t4
ON
	t1.team_id = t4."id"
ORDER BY
	本期佣金 DESC
;


INSERT INTO report.dwr_team_revenue_detail_201503
SELECT
	t1.account_month,
	t1.account_date,
	t1.team_id AS 团品ID,
	regexp_replace(regexp_replace(t4.stitle, ',', '，','g'),'	','','g') AS 团品名称,
	t1.origin_price AS 团品价格,
	COALESCE(t1.cost_price, 0) AS 团品底价,
	t1.sale_platform AS 售卖频道,
	t4.delivery AS 团品配送类型,
	CASE
	WHEN t4.new_type = 'other' THEN '外团'
	ELSE '本团' END AS 是否外团,
	CASE
	WHEN t4.group_id IN (18, 19) THEN
		(
			CASE
			WHEN	t4.new_attr = 'tickets' THEN	'门票'
			WHEN	t4.new_type = 'holiday_tts' AND (t4.new_attr <> 'tickets' OR new_attr IS NULL)	THEN	'tts'
			ELSE	'其他旅游商品'	END
		)
	WHEN t4.group_id IN (2, 4) THEN
		(
			CASE
			WHEN t4.partner_source = '0' THEN	'直销'
			WHEN t4.partner_source = '1' THEN	
			(
				CASE
				WHEN t4.other_tuan_type IS NULL OR t4.other_tuan_type = '' THEN 'OTA'
				ELSE t4.other_tuan_type END
			)	END
		)
	WHEN	t4.group_id = 0 THEN	'未分类'	END AS 订单来源,
	CASE
	WHEN	t4.group_id IN (2, 4) THEN	'酒店'
	WHEN	t4.group_id IN (18, 19) THEN	'旅游'
	ELSE	'未分类'	END AS 订单类别,
	COALESCE(t2.seq, '-') AS 酒店seq,
	COALESCE(t2.hotel_name, '-') AS 酒店名称,
	CASE
	WHEN (t4.sign_company = '0' or t4.sign_company is null) THEN	'北京趣拿信息技术有限公司'
	WHEN t4.sign_company = '1' THEN	'北京趣拿软件科技有限公司'	END AS 签约公司,
	COALESCE(t2.dept, '-') AS 所属部门,
	t1.order_id AS 订单号,
	0 AS 购买数量,
	t1.refund_quantity AS 退款数量,
	0 AS 消费数量,
	0 AS 恢复数量,
	-COALESCE(t1.lost_red_envelope, 0) AS 红包金额,
	-COALESCE(t1.lost_card, 0) AS 代金券金额,
	-(t1.origin_price - t1.sale_price) * t1.refund_quantity AS 优惠金额,
	0 AS 支付金额,
	-t1.refund_money AS 退款金额,
	-CAST((t1.origin_price - t1.cost_price) * t1.refund_quantity AS DECIMAL(18,2)) AS 本期佣金,
	-CAST((t1.origin_price - t1.cost_price) * t1.refund_quantity - COALESCE(t1.lost_red_envelope, 0) - COALESCE(t1.lost_card, 0) AS DECIMAL(18,2)) AS 本期收入,
	0 AS 渠道服务费,
	t1.activity_type AS 活动类型,
	0 AS 返现金额
FROM
(
	SELECT
		r_l.account_month,
		r_l.account_date,
		o.team_id AS team_id,
		o.id  AS order_id,
		COALESCE(o.cost_price, 0) AS cost_price,
		o.price AS sale_price,
		r_l.lost_red_envelope,
		r_l.lost_card,
		r_l.refund_money,
		r_l.refund_quantity,
		0 AS shop_id,
		CASE
		WHEN oe.oid IS NULL THEN
			o.price
		ELSE
			oe.team_price
		END
		AS origin_price,
		CASE
		WHEN o.user_id = '-101012' THEN 'bainuo'
		WHEN o.user_id = '-101010' THEN 'dianping'
		WHEN o.user_id = '-100' THEN 'zhunaer'
		WHEN o.user_id = '-101' THEN 'lashou'
		ELSE
		(
			CASE
			WHEN o.service = 'sms_client' THEN	'Q-app'
			WHEN o.service = 'chinabank' 	THEN	'Q-touch'
			ELSE	'Q-www'	END	
		) 
		END AS sale_platform,
		CASE
		WHEN oe.activity_type IN (2, 3) THEN '五折'
		WHEN oe.activity_type = 4 THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返现+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type = 1 AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返现'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '返币+新用户立减'
		WHEN oe.activity_type = 12 AND oe.rebate_type in (2, 3) AND oe.team_price::DECIMAL = o.price::DECIMAL THEN '返币'
		WHEN oe.activity_type = 12 AND oe.rebate_type not in (1, 2, 3) AND oe.team_price::DECIMAL > o.price::DECIMAL THEN '新用户立减'
		WHEN oe.activity_type = 16 AND oe.rebate_type = 1 THEN '拉新'
		WHEN oe.activity_type = 16 AND oe.rebate_type in (2, 3) THEN '返币'
		WHEN oe.activity_type = 32 AND oe.rebate_type = 1 THEN '超超返'
		WHEN oe.activity_type = 32 AND oe.rebate_type in (2, 3) THEN '返币'
		WHEN oe.activity_type = 260 AND oe.rebate_type = 0 THEN '同城立减+返币'
		WHEN oe.activity_type = 256 AND oe.rebate_type = 0 THEN '同城立减'
		ELSE '原价'
		END AS activity_type
	FROM
		(
			SELECT 
				order_id,
				MAX(to_char(create_time, 'YYYY-MM')) AS account_month,
				MAX(create_time::DATE) AS account_date,
				SUM(refund_quantity) AS refund_quantity,
				SUM(refund_money) AS refund_money,
				SUM(lost_card) AS lost_card,
				SUM(lost_red_envelope) AS lost_red_envelope
			FROM 
				"public".refund_log
			WHERE
				create_time >= '2015-03-01' :: timestamptz
			AND 
				create_time < '2015-04-01' :: timestamptz
			AND 
				refund_method = 'online'
			GROUP BY
				order_id
		) r_l
	JOIN
		PUBLIC . ORDER AS o
	ON
		r_l.order_id = o.id
	JOIN
		(SELECT id from "public".team where delivery = 'voucher') t
	ON
		o.team_id = t.id
	LEFT JOIN
		public.order_ext as oe
	ON
		o.id = oe.oid
--	LEFT JOIN
--		(select oid,activity_type from order_activity where activity_type in (2, 3, 4, 12)) oa
--	ON
--		o.id = oa.oid
	ORDER BY
		o.id
) t1
LEFT JOIN
(
	SELECT
		a.id,a.seq,b.dept,b.hotel_name
	FROM
		(SELECT id, seq FROM partner_shop) a
	JOIN
		(SELECT 
			DISTINCT cch.hotel_seq as seq ,cc.department as dept,ch.name as hotel_name
		FROM 
			report.crm_customer cc
		JOIN 
			report.crm_customer_hotel cch 
		ON
			cch.customer_serial_number = cc.serial_number
		JOIN 
			report.crm_hotel as ch 
		ON
			ch.seq_number=cch.hotel_seq
		WHERE 
			cc.valid=1
		ORDER BY
			cch.hotel_seq) b
	ON 
		a.seq = b.seq
) t2
ON
	t1.shop_id = t2."id"
JOIN
(
	SELECT
		id,
		stitle,
		delivery,
		partner_source,
		group_id,
		new_type,
		new_attr,
		sign_company,
		other_tuan_type
	FROM
		team
	WHERE
		delivery = 'voucher'
) t4
ON
	t1.team_id = t4."id"
ORDER BY
	本期佣金 DESC
;


CREATE TABLE IF NOT EXISTS "report"."movie_201503" (
"account_month" varchar(10),
"account_date" varchar(10),
"team_price" numeric(18,2),
"team_cost_price" numeric(18,2),
"sale_channel" varchar(50),
"order_id" varchar(50),
"buy_qty" int8,
"refund_qty" int8,
"consume_qty" int8,
"restore_qty" int8,
"red_envelope_amt" numeric(18,2),
"card_amt" numeric(18,2),
"discount_amt" numeric(18,2),
"pay_amt" numeric(18,2),
"refund_amt" numeric(18,2),
"profit" numeric(18,2),
"revenue" numeric(18,2),
"channel_service_charge" numeric(18,2),
"activity_type" varchar(50),
"star_money" numeric(18,2),
"agent_name" varchar(64),
"cinema_name" varchar(256)
)
WITH (OIDS=FALSE)
;
delete from report.movie_201503;
commit;


INSERT INTO report.movie_201503
SELECT
	t1.account_month,
	t1.account_date,
	t1.origin_price AS 团品价格,
	COALESCE(t1.cost_price, 0) AS 团品底价,
	t1.sale_platform AS 售卖频道,
	t1.order_id AS 订单号,
	t1.quantity AS 购买数量,
	t1.refund_quantity AS 退款数量,
	0 AS 消费数量,
	0 AS 恢复数量,
	COALESCE(t1.red_envelope, 0) AS 红包金额,
	COALESCE(t1.card, 0) AS 代金券金额,
	(t1.origin_price - t1.sale_price) * (t1.quantity - t1.refund_quantity) AS 优惠金额,
	t1.money AS 支付金额,
	t1.refund_money AS 退款金额,
	CAST((t1.origin_price - t1.cost_price) * (t1.quantity - t1.refund_quantity) AS DECIMAL(18,2)) AS 本期佣金,
	CAST((t1.origin_price - t1.cost_price) * (t1.quantity - t1.refund_quantity) - COALESCE(t1.red_envelope, 0) - COALESCE(t1.card, 0) AS DECIMAL(18,2)) AS 本期收入,
	0 AS 渠道服务费,
	t1.activity_type AS 活动类型,
	t1.star_money AS 星券,
    t1.agent_name AS 代理商,
    t1.cinema_name AS 影院名称
FROM
(
	SELECT
		to_char(to_timestamp(o.pay_time), 'YYYY-MM') AS account_month,
		to_timestamp(o.pay_time)::DATE AS account_date,
		o.team_id AS team_id,
		o.id  AS order_id,
		COALESCE(o.cost_price, 0) AS cost_price,
		o.price AS sale_price,
		o.red_envelope,
		o.card,
		o.money,
		o.refund_money,
		o.quantity,
		o.refund_quantity,
		CASE
		WHEN oe.oid IS NULL THEN
			o.price
		ELSE
			oe.team_price
		END
		AS origin_price,
		CASE
		WHEN o.user_id = '-101012' THEN 'bainuo'
		WHEN o.user_id = '-101010' THEN 'dianping'
		WHEN o.user_id = '-100' THEN 'zhunaer'
		WHEN o.user_id = '-101' THEN 'lashou'
		ELSE
		(
			CASE
			WHEN o.service = 'sms_client' THEN	'Q-app'
			WHEN o.service = 'chinabank' 	THEN	'Q-touch'
			ELSE	'Q-www'	END	
		) 
		END AS sale_platform,
		'consume'::TEXT AS operate_type,
		CASE
		WHEN oe.activity_type = 1027 THEN '五折+返星券'
		WHEN oe.activity_type = 1025 THEN '返星券'
		WHEN oe.activity_type = 1029 THEN '一元+返星券'
		ELSE '原价'
		END AS activity_type,
		COALESCE(ror.money, 0) AS star_money,
		pa.name AS agent_name,
		pc.name AS cinema_name
	FROM
		PUBLIC . non_hotel_order AS o
	LEFT JOIN
		public.order_ext as oe
	ON
		o.id = oe.oid
--	LEFT JOIN
--		(select oid,activity_type from order_activity where activity_type in (2, 3, 4, 12, 1027)) oa
--	ON
--		o.id = oa.oid
	LEFT JOIN
		report.prd_show_schedule pss
	ON
		o.team_id = pss.id
	LEFT JOIN
		report.prd_agent pa
	ON
		pss.agent_id = pa.id
	LEFT JOIN
		report.prd_cinema pc
	ON
		pss.cinema_id = pc.id
	LEFT JOIN
		(select order_id, money from report.order_redpacket) ror
	ON
		o.id = ror.order_id
	WHERE
		product_line = 5
	AND
		state IN (
			'pay',
			'partial_refund',
			'refund',
			'refunding'
		)
	AND
		o.pay_time >= EXTRACT(epoch FROM '2015-03-01' :: timestamptz)::BIGINT
	AND
		o.pay_time < EXTRACT(epoch FROM	'2015-04-01' :: timestamptz)::BIGINT
	ORDER BY
		o.id
) t1
ORDER BY
	本期佣金 DESC
;

2015-04-01
2015-03-31
python /home/q/desdev/sh_script/daily_report/compute_team_revenue_detail_month.py 2015-04-01
